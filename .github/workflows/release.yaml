name: 'OTUS C++ HW8 CI'

on:
  push:
    branches:
      - master
      - develop
      - feature/*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install GTest
        run: sudo apt-get install libgtest-dev && cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make && sudo cp lib/*.a /usr/lib && sudo ln -s /usr/lib/libgtest.a /usr/local/lib/libgtest.a && sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/libgtest_main.a

      - name: Install Boost SDK
        run: sudo apt install libboost-all-dev

      - name: Dowload Boost
        run: wget https://boostorg.jfrog.io/artifactory/main/release/1.81.0/source/boost_1_81_0.tar.gz

      - name: Configure Boost
        run: mkdir boost-ver && cd boost-ver && tar -xzf ../boost_*.tar.gz && cd boost_*/ && sudo ./bootstrap.sh && sudo ./b2 install --prefix=/usr/local --with-filesystem --with-program_options

      - run: cmake -B ./build -DPATCH_VERSION=${{ github.run_number }}

      - run: cmake --build ./build

      - name: Run tests
        run: cd ./build/tests/tests && ctest

      - run: cmake --build ./build --target package

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/bayan-0.0.${{ github.run_number }}-Linux.deb
          asset_name: bayan-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package